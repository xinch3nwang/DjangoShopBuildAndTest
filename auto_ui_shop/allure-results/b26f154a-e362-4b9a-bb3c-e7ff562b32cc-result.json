{"name": "test_add_to_cart[data2]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6C171FE15+26629]\n\t(No symbol) [0x00007FF6C1685FE0]\n\t(No symbol) [0x00007FF6C151931A]\n\t(No symbol) [0x00007FF6C156F8E7]\n\t(No symbol) [0x00007FF6C156FB1C]\n\t(No symbol) [0x00007FF6C15C34A7]\n\t(No symbol) [0x00007FF6C1597AEF]\n\t(No symbol) [0x00007FF6C15C0169]\n\t(No symbol) [0x00007FF6C1597883]\n\t(No symbol) [0x00007FF6C1560550]\n\t(No symbol) [0x00007FF6C1561803]\n\tGetHandleVerifier [0x00007FF6C1A7728D+3529853]\n\tGetHandleVerifier [0x00007FF6C1A8D9F2+3621858]\n\tGetHandleVerifier [0x00007FF6C1A824A3+3575443]\n\tGetHandleVerifier [0x00007FF6C17EB74A+860474]\n\t(No symbol) [0x00007FF6C169085F]\n\t(No symbol) [0x00007FF6C168CB94]\n\t(No symbol) [0x00007FF6C168CD36]\n\t(No symbol) [0x00007FF6C167C299]\n\tBaseThreadInitThunk [0x00007FFE8ED87374+20]\n\tRtlUserThreadStart [0x00007FFE90D9CC91+33]", "trace": "self = <scripts.test_product.TestProductPage object at 0x00000141BCA09790>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"05d2d23496f349685a797bc3e0c9dd83\")>\nbase_url = 'http://localhost:8080/'\nproduct_page = <pages.product_page.ProductPage object at 0x00000141BCE9CF50>\ndata = {'count': 2, 'expected': True, 'index': [], 'product_id': '1'}\n\n    @pytest.mark.parametrize(\"data\", read_test_data(\"../data/product_data.json\"))\n    def test_add_to_cart(self, browser, base_url, product_page, data):\n        \"\"\"测试商品加入购物车功能\"\"\"\n        product_id = data.get('product_id')\n        count = data.get('count')\n        index = data.get('index')\n        expected = data.get('expected')\n    \n        browser.get(base_url + f\"detail/{product_id}/\")\n        if len(index)>0:\n            product_page.add_to_cart_with_spus(count, index)\n        else:\n>           product_page.add_to_cart_without_spus(count)\n\nscripts\\test_product.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\product_page.py:97: in add_to_cart_without_spus\n    self.click(self.locators.ADD_TO_CART_BUTTON)\nbase\\base_page.py:22: in click\n    self.find_element(locator).click()\nbase\\base_page.py:14: in find_element\n    return self.wait.until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"05d2d23496f349685a797bc3e0c9dd83\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000141BCE6F240>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6C171FE15+26629]\nE       \t(No symbol) [0x00007FF6C1685FE0]\nE       \t(No symbol) [0x00007FF6C151931A]\nE       \t(No symbol) [0x00007FF6C156F8E7]\nE       \t(No symbol) [0x00007FF6C156FB1C]\nE       \t(No symbol) [0x00007FF6C15C34A7]\nE       \t(No symbol) [0x00007FF6C1597AEF]\nE       \t(No symbol) [0x00007FF6C15C0169]\nE       \t(No symbol) [0x00007FF6C1597883]\nE       \t(No symbol) [0x00007FF6C1560550]\nE       \t(No symbol) [0x00007FF6C1561803]\nE       \tGetHandleVerifier [0x00007FF6C1A7728D+3529853]\nE       \tGetHandleVerifier [0x00007FF6C1A8D9F2+3621858]\nE       \tGetHandleVerifier [0x00007FF6C1A824A3+3575443]\nE       \tGetHandleVerifier [0x00007FF6C17EB74A+860474]\nE       \t(No symbol) [0x00007FF6C169085F]\nE       \t(No symbol) [0x00007FF6C168CB94]\nE       \t(No symbol) [0x00007FF6C168CD36]\nE       \t(No symbol) [0x00007FF6C167C299]\nE       \tBaseThreadInitThunk [0x00007FFE8ED87374+20]\nE       \tRtlUserThreadStart [0x00007FFE90D9CC91+33]\n\n..\\.conda\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "description": "测试商品加入购物车功能", "parameters": [{"name": "data", "value": "{'product_id': '1', 'count': 2, 'index': [], 'expected': True}"}], "start": 1746498536421, "stop": 1746498547259, "uuid": "2cbb4e9d-6db9-4a0c-bfae-d93b9e60dc58", "historyId": "4b0c24b2e0ff8e8cefb26a9d3706c918", "testCaseId": "6eeaf41aed85f83be73de48726eed3cf", "fullName": "scripts.test_product.TestProductPage#test_add_to_cart", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_product"}, {"name": "subSuite", "value": "TestProductPage"}, {"name": "host", "value": "LAPTOP-N95P6LV6"}, {"name": "thread", "value": "47000-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_product"}]}