{"name": "test_login[data4]", "status": "broken", "statusDetails": {"message": "NameError: name 'NoSuchElementException' is not defined", "trace": "self = <scripts.test_login.TestLogin object at 0x000001457DD57B50>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe1b6861f4bf17e67ea1e4909af9022d\")>\nbase_url = 'http://localhost:8080/'\nlogin_page = <pages.login_page.LoginPage object at 0x000001457E199F90>\ndata = {'expected': False, 'password': '', 'username': ''}\n\n    @pytest.mark.parametrize(\"data\", read_test_data('../data/login_data.json'))\n    def test_login(self, browser, base_url, login_page, data):\n        \"\"\"测试登录功能\"\"\"\n        username = data.get('username')\n        password = data.get('password')\n        expected = data.get('expected')\n    \n        # 访问登录页面\n        browser.get(base_url + \"member/login/\")\n    \n        # 执行登录操作\n        login_page.login(username, password)\n    \n        # 断言登录结果\n        if expected:\n            assert '/list' in browser.current_url\n        else:\n            try:\n>               error_message = login_page.get_error_message()\n\nscripts\\test_login.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\login_page.py:46: in get_error_message\n    return self.get_text(self.locators.ERROR_MSG)\nbase\\base_page.py:32: in get_text\n    return self.find_element(locator).text\nbase\\base_page.py:14: in find_element\n    return self.wait.until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fe1b6861f4bf17e67ea1e4909af9022d\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001457E15D580>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF659F3FE15+26629]\nE       \t(No symbol) [0x00007FF659EA5FE0]\nE       \t(No symbol) [0x00007FF659D3931A]\nE       \t(No symbol) [0x00007FF659D8F8E7]\nE       \t(No symbol) [0x00007FF659D8FB1C]\nE       \t(No symbol) [0x00007FF659DE34A7]\nE       \t(No symbol) [0x00007FF659DB7AEF]\nE       \t(No symbol) [0x00007FF659DE0169]\nE       \t(No symbol) [0x00007FF659DB7883]\nE       \t(No symbol) [0x00007FF659D80550]\nE       \t(No symbol) [0x00007FF659D81803]\nE       \tGetHandleVerifier [0x00007FF65A29728D+3529853]\nE       \tGetHandleVerifier [0x00007FF65A2AD9F2+3621858]\nE       \tGetHandleVerifier [0x00007FF65A2A24A3+3575443]\nE       \tGetHandleVerifier [0x00007FF65A00B74A+860474]\nE       \t(No symbol) [0x00007FF659EB085F]\nE       \t(No symbol) [0x00007FF659EACB94]\nE       \t(No symbol) [0x00007FF659EACD36]\nE       \t(No symbol) [0x00007FF659E9C299]\nE       \tBaseThreadInitThunk [0x00007FFE8ED87374+20]\nE       \tRtlUserThreadStart [0x00007FFE90D9CC91+33]\n\n..\\.conda\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <scripts.test_login.TestLogin object at 0x000001457DD57B50>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe1b6861f4bf17e67ea1e4909af9022d\")>\nbase_url = 'http://localhost:8080/'\nlogin_page = <pages.login_page.LoginPage object at 0x000001457E199F90>\ndata = {'expected': False, 'password': '', 'username': ''}\n\n    @pytest.mark.parametrize(\"data\", read_test_data('../data/login_data.json'))\n    def test_login(self, browser, base_url, login_page, data):\n        \"\"\"测试登录功能\"\"\"\n        username = data.get('username')\n        password = data.get('password')\n        expected = data.get('expected')\n    \n        # 访问登录页面\n        browser.get(base_url + \"member/login/\")\n    \n        # 执行登录操作\n        login_page.login(username, password)\n    \n        # 断言登录结果\n        if expected:\n            assert '/list' in browser.current_url\n        else:\n            try:\n                error_message = login_page.get_error_message()\n                assert error_message is not None #or '/login' in browser.current_url\n>           except NoSuchElementException:\nE           NameError: name 'NoSuchElementException' is not defined\n\nscripts\\test_login.py:31: NameError"}, "description": "测试登录功能", "parameters": [{"name": "data", "value": "{'username': '', 'password': '', 'expected': False}"}], "start": 1746414270645, "stop": 1746414281878, "uuid": "795dc134-df0f-4a4a-a691-aaede57686e3", "historyId": "9dc011c245fff7b887731336c6384d0d", "testCaseId": "1d80d88536c622141c7393804df49bc9", "fullName": "scripts.test_login.TestLogin#test_login", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "LAPTOP-N95P6LV6"}, {"name": "thread", "value": "67056-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_login"}]}