{"name": "test_add_to_cart[data2]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF7F2BDFE15+26629]\n\t(No symbol) [0x00007FF7F2B45FE0]\n\t(No symbol) [0x00007FF7F29D931A]\n\t(No symbol) [0x00007FF7F2A2F8E7]\n\t(No symbol) [0x00007FF7F2A2FB1C]\n\t(No symbol) [0x00007FF7F2A834A7]\n\t(No symbol) [0x00007FF7F2A57AEF]\n\t(No symbol) [0x00007FF7F2A80169]\n\t(No symbol) [0x00007FF7F2A57883]\n\t(No symbol) [0x00007FF7F2A20550]\n\t(No symbol) [0x00007FF7F2A21803]\n\tGetHandleVerifier [0x00007FF7F2F3728D+3529853]\n\tGetHandleVerifier [0x00007FF7F2F4D9F2+3621858]\n\tGetHandleVerifier [0x00007FF7F2F424A3+3575443]\n\tGetHandleVerifier [0x00007FF7F2CAB74A+860474]\n\t(No symbol) [0x00007FF7F2B5085F]\n\t(No symbol) [0x00007FF7F2B4CB94]\n\t(No symbol) [0x00007FF7F2B4CD36]\n\t(No symbol) [0x00007FF7F2B3C299]\n\tBaseThreadInitThunk [0x00007FFE8ED87374+20]\n\tRtlUserThreadStart [0x00007FFE90D9CC91+33]", "trace": "self = <scripts.test_product.TestProductPage object at 0x000001FC691F8E90>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4d56d671b2f2f307aeb5578271b80604\")>\nbase_url = 'http://localhost:8080/'\nproduct_page = <pages.product_page.ProductPage object at 0x000001FC69691850>\ndata = {'count': 2, 'expected': True, 'index': [], 'product_id': '1'}\n\n    @pytest.mark.parametrize(\"data\", read_test_data(\"../data/product_data.json\"))\n    def test_add_to_cart(self, browser, base_url, product_page, data):\n        \"\"\"测试商品加入购物车功能\"\"\"\n        product_id = data.get('product_id')\n        count = data.get('count')\n        index = data.get('index')\n        expected = data.get('expected')\n    \n        browser.get(base_url + f\"detail/{product_id}/\")\n        if len(index)>0:\n            product_page.add_to_cart_with_spus(count, index)\n        else:\n            product_page.add_to_cart_without_spus(count)\n    \n>       assert product_page.get_cart_success() == expected\n\nscripts\\test_product.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\product_page.py:70: in get_cart_success\n    if self.get_text(self.locators.CART_SUCCESS)=='添加购物车成功':\nbase\\base_page.py:32: in get_text\n    return self.find_element(locator).text\nbase\\base_page.py:14: in find_element\n    return self.wait.until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4d56d671b2f2f307aeb5578271b80604\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001FC691EB9C0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7F2BDFE15+26629]\nE       \t(No symbol) [0x00007FF7F2B45FE0]\nE       \t(No symbol) [0x00007FF7F29D931A]\nE       \t(No symbol) [0x00007FF7F2A2F8E7]\nE       \t(No symbol) [0x00007FF7F2A2FB1C]\nE       \t(No symbol) [0x00007FF7F2A834A7]\nE       \t(No symbol) [0x00007FF7F2A57AEF]\nE       \t(No symbol) [0x00007FF7F2A80169]\nE       \t(No symbol) [0x00007FF7F2A57883]\nE       \t(No symbol) [0x00007FF7F2A20550]\nE       \t(No symbol) [0x00007FF7F2A21803]\nE       \tGetHandleVerifier [0x00007FF7F2F3728D+3529853]\nE       \tGetHandleVerifier [0x00007FF7F2F4D9F2+3621858]\nE       \tGetHandleVerifier [0x00007FF7F2F424A3+3575443]\nE       \tGetHandleVerifier [0x00007FF7F2CAB74A+860474]\nE       \t(No symbol) [0x00007FF7F2B5085F]\nE       \t(No symbol) [0x00007FF7F2B4CB94]\nE       \t(No symbol) [0x00007FF7F2B4CD36]\nE       \t(No symbol) [0x00007FF7F2B3C299]\nE       \tBaseThreadInitThunk [0x00007FFE8ED87374+20]\nE       \tRtlUserThreadStart [0x00007FFE90D9CC91+33]\n\n..\\.conda\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "description": "测试商品加入购物车功能", "parameters": [{"name": "data", "value": "{'product_id': '1', 'count': 2, 'index': [], 'expected': True}"}], "start": 1746499306515, "stop": 1746499318189, "uuid": "ba688e3b-921e-4e7f-a39c-aad5e5af68b4", "historyId": "4b0c24b2e0ff8e8cefb26a9d3706c918", "testCaseId": "6eeaf41aed85f83be73de48726eed3cf", "fullName": "scripts.test_product.TestProductPage#test_add_to_cart", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_product"}, {"name": "subSuite", "value": "TestProductPage"}, {"name": "host", "value": "LAPTOP-N95P6LV6"}, {"name": "thread", "value": "65340-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_product"}]}